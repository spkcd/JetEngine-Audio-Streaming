/**
 * JetEngine Audio Stream - Standalone Player (Minified)
 */
document.addEventListener("DOMContentLoaded",function(){const e={debugMode:!0,resolveEndpointBase:window.location.origin+"/wp-json/jetengine-audio-stream/v1/resolve-id",playEndpointBase:window.location.origin+"/wp-json/jetengine-audio-stream/v1/play/"};function t(t,n=null){e.debugMode&&(n?console.log(`[AudioPlayer] ${t}`,n):console.log(`[AudioPlayer] ${t}`))}async function n(){t("Initializing players..."),document.querySelectorAll(".audio-player").forEach(async function(n){let o=n.getAttribute("data-url"),a=null;if(!o)return void r(n,"Missing audio URL configuration (data-url).");if(!o.startsWith("http")&&(t(`Converting relative URL to absolute: ${o}`),o=window.location.origin+o,t(`Resulting absolute URL: ${o}`)),o.match(/\/(?<filename>[\w-]+)\.(?<ext>mp3|wav|ogg|m4a|flac)$/i)){const s=o.match(/\/(?<filename>[\w-]+)\.(?<ext>mp3|wav|ogg|m4a|flac)$/i);t(`Direct file URL detected: ${o}. Attempting to resolve to endpoint.`);const l=await i(s.groups.filename);if(!l||!l.id)return void r(n,`Failed to resolve attachment ID for ${s.groups.filename}.${s.groups.ext}`);a=l.id,o=`${e.playEndpointBase}${a}`,n.setAttribute("data-url",o),t(`Resolved to streaming endpoint: ${o} (Attachment ID: ${a})`)}else{const e=o.match(/\/play\/(\d+)/);e&&e[1]?(a=parseInt(e[1],10),t(`Streaming URL detected: ${o} (Attachment ID: ${a})`)):t(`Could not extract attachment ID from URL: ${o}`)}t(`Initializing player for: ${o}`),s(n,o)})}async function s(e,n){const s=e.querySelector(".waveform"),i=e.querySelector(".play-button"),r=e.querySelector(".time-display");if(!s||!i)return void r(e,"Player structure incomplete (missing .waveform or .play-button).");try{t("Creating WaveSurfer instance...");const o=WaveSurfer.create({container:s,waveColor:"gray",progressColor:"blue",barWidth:5,barRadius:13,height:80,responsive:!0,fillParent:!0,backend:"MediaElement"});t("WaveSurfer instance created.",{url:n}),i.addEventListener("click",function(){t("Play/Pause button clicked."),o.playPause()}),o.on("play",()=>{t("Playback started."),i.innerHTML='<i aria-hidden="true" class="jki jki-pause-line"></i>'}),o.on("pause",()=>{t("Playback paused."),i.innerHTML='<i aria-hidden="true" class="jki jki-play"></i>'}),o.on("ready",function(){t("WaveSurfer ready event fired.");const e=o.getDuration();r&&(r.textContent=`0:00 / ${a(e)}`),i.innerHTML=o.isPlaying()?'<i aria-hidden="true" class="jki jki-pause-line"></i>':'<i aria-hidden="true" class="jki jki-play"></i>'}),o.on("audioprocess",function(){if(r){const e=o.getCurrentTime(),t=o.getDuration();r.textContent=`${a(e)} / ${a(t)}`}}),o.on("finish",()=>{t("Playback finished."),i.innerHTML='<i aria-hidden="true" class="jki jki-play"></i>'}),o.on("error",function(t){console.error("Player error:",t),r(e,`Error loading audio: ${t}`)}),t("WaveSurfer event listeners attached."),o.load(n)}catch(t){console.error("Error initializing WaveSurfer:",t),r(e,`Failed to initialize player: ${t.message}`)}}async function i(n){if(!n)return null;const s=`${e.resolveEndpointBase}?filename=${encodeURIComponent(n)}`;t(`Resolving filename '${n}' using URL: ${s}`);try{const e=await fetch(s);if(!e.ok){const t=await e.json().catch(()=>({message:"Unknown resolution error"}));throw new Error(`HTTP error ${e.status}: ${t.message||"Failed to resolve"}`)}const i=await e.json();return i.id?(t(`Resolved filename '${n}' to attachment ID: ${i.id}`),{id:i.id}):(t(`Filename '${n}' not found via resolve endpoint.`),null)}catch(e){return console.error(`Error resolving endpoint for filename '${n}':`,e),null}}function a(e){if(isNaN(e)||!isFinite(e))return"0:00";const t=Math.floor(e/60),n=Math.floor(e%60);return`${t}:${n.toString().padStart(2,"0")}`}function r(e,n){t(`Displaying error: "${n}"`);let s=e.querySelector(".audio-error");if(!s){s=document.createElement("div"),s.className="audio-error",s.style.color="#d63638",s.style.marginTop="10px";const t=e.querySelector(".waveform");t&&t.nextSibling?e.insertBefore(s,t.nextSibling):e.appendChild(s)}s.textContent=n}n(),document.addEventListener("jet-smart-filters/inited",function(){t("JetSmartFilters detected. Subscribing to AJAX updates."),window.JetSmartFilters.events.subscribe("ajaxFilters/updated",function(){t("JetSmartFilters updated. Re-initializing players..."),n()})})}); 